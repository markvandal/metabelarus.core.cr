- name: Add global variables
  include_vars:
    file: "{{ playbook_dir }}/config.yml"
  tags:
    - ubuntu
    - root
    - node
    - sentery
    - seed
    - validator

- name: Add nginx variables
  include_vars:
    file: "{{ playbook_dir }}/roles/nginx/defaults/main.yml"
  tags:
    - ubuntu
    - root
    - node
    - sentery
    - seed
    - validator

- name: Start validator container
  docker_container:
    name: mbcorecr-validator
    image: mbcorecrnode:latest
    restart: yes
    output_logs: true
    command: mbcorecrd start
    volumes:
      - "/{{ project_dir }}/build/validator:/root/.mbcorecr"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  tags:
    - ubuntu
    - root
    - node
    - validator

- name: Get validator container info
  docker_container_info:
    name: mbcorecr-validator
  register: validator_info
  tags:
    - ubuntu
    - root
    - node
    - sentery

- name: Get validator node id
  shell: docker exec -ti mbcorecr-validator sh -c "mbcorecrd tendermint show-node-id"
  register: validator_id
  tags:
    - ubuntu
    - root
    - node
    - sentery

- name: Start sentery container (as sentery)
  docker_container:
    name: mbcorecr-sentery
    image: mbcorecrnode:latest
    restart: yes
    output_logs: true
    command: mbcorecrd start --p2p.persistent_peers "{{ validator_id.stdout }}@{{ validator_info.container.NetworkSettings.IPAddress }}:{{ validator_node.p2p_port }}" --p2p.private_peer_ids "{{ validator_id.stdout }}" --p2p.unconditional_peer_ids "{{ validator_id.stdout }}"
    ports:
      - "{{ sentery_node.p2p_port }}:{{ sentery_node.p2p_port }}"
      - "{{ sentery_node.rpc_port }}:{{ sentery_node.rpc_port }}"
    volumes:
      - "/{{ project_dir }}/build/sentery:/root/.mbcorecr"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  tags:
    - ubuntu
    - root
    - node
    - sentery

- name: Get sentery container info
  docker_container_info:
    name: mbcorecr-sentery
  register: sentery_info
  tags:
    - ubuntu
    - root
    - node
    - seed

- name: Get sentery id
  shell: docker exec -ti mbcorecr-sentery sh -c "mbcorecrd tendermint show-node-id"
  register: sentery_id
  tags:
    - ubuntu
    - root
    - node
    - seed

- name: Start seeder container
  docker_container:
    name: mbcorecr-seed
    image: mbcorecrnode:latest
    restart: yes
    output_logs: true
    command: mbcorecrd start --p2p.persistent_peers "{{ sentery_id.stdout }}@{{ domain }}:{{ sentery_node.p2p_port }}" --p2p.unconditional_peer_ids "{{ sentery_id.stdout }}"
    ports:
      - "{{ seed_export.tcp_port }}:{{ seed_node.tcp_port }}"
      - "{{ seed_export.p2p_port }}:{{ seed_node.p2p_port }}"
      - "{{ seed_export.rpc_port }}:{{ seed_node.rpc_port }}"
    volumes:
      - "/{{ project_dir }}/build/seed:/root/.mbcorecr"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  when: domain != "localhost" 
  tags:
    - ubuntu
    - root
    - node
    - seed

- name: Configure nginx.http.conf
  template:
    src: "{{ playbook_dir }}/roles/nginx/templates/nginx.http.conf"
    dest: "/etc/nginx/sites-enabled/default"
  when: host_type == "local"
  tags:
    - root
    - ubuntu
    - nginx

- name: Copy nginx.https.conf
  template:
    src: "{{ playbook_dir }}/roles/nginx/templates/nginx.https.conf"
    dest: "/etc/nginx/sites-enabled/default"
  when: host_type == "public"
  tags:
    - root
    - ubuntu
    - nginx

- name: Restart nginx service
  service:
    name: nginx
    state: restarted
  tags:
    - root
    - ubuntu
    - nginx